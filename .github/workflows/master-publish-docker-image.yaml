name: Publish Docker image

on:
  workflow_dispatch:
    inputs:
      distinct_id:
        description: 'run identifier'
        required: false

env:
  REGISTRY: ghcr.io
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: linux_x64_8_cpu_32_gb
    permissions:
      contents: write
      packages: write
    steps:
    - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
      run: echo ${{ github.event.inputs.distinct_id }}    

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Merge develop -> master
      run: |
        git fetch
        git checkout master
        git pull
        CHANGES=$(git log master..origin/develop --oneline)
        if [[ -z "$CHANGES" ]]; then
          echo "No changes to merge."
          echo "has_changes=no" >> $GITHUB_ENV
        else
          git merge origin/develop
          echo "has_changes=yes" >> $GITHUB_ENV
        fi
      
    - name: Resolve docker image name
      if: env.has_changes == 'yes'
      id: image_name
      run: |
        echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT

    - name: Log in to the Container registry
      if: env.has_changes == 'yes'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      if: env.has_changes == 'yes'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ steps.image_name.outputs.IMAGE_NAME }}

    - name: Setup Java
      if: env.has_changes == 'yes'
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
    
    - name: Setup Gradle
      if: env.has_changes == 'yes'
      uses: gradle/gradle-build-action@v2

    - name: Build application
      if: env.has_changes == 'yes'
      run: |
        ./gradlew -x test -x testNative build -Dquarkus.package.type=native -Dquarkus.native.container-build=true -Dquarkus.native.native-image-xmx=32G --info
    
    - name: Build and push Docker image
      if: env.has_changes == 'yes'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        file: src/main/docker/Dockerfile.native
        tags: ${{ steps.meta.outputs.tags }},${{ env.REGISTRY }}/${{ steps.image_name.outputs.IMAGE_NAME }}:latest
        labels: ${{ steps.meta.outputs.labels }}